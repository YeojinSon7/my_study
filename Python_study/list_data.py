# # # 리스트(list) 자료형
# # # 여러개의 값을 변수 1개에 저장
# # # 리스트 데이터 크기는 python이 알아서 해준다
# # [1,2,3,4,5,6,7,8,9]
# # [1,1,1,1,1]
# # ["Hi","World","Python"]
# # [1,"Hello",2,"wow"]
# # [1, 2, ["Hello", "World"]]
# # []
# # # 비어있는걸 만들고 나중에 추가가능
# # # 안에 있는거 Element

# # li_1 = [1, 2, 3]
# # # print(li_1[0])
# # # print(li_1[1])
# # # print(li_1[2])
# # # print(li_1[-1])
# # print(li_1[0] + li_1[1])

# # li_2 = [1, 2, 3, [4, 5, 6]]
# # print(li_2[3][0]) #인공지능할때 많이 쓴다 인공지능은 인간을 뛰어넘는 차원으로 갈 수 있다 인간은 3차원까지만 안다
# # print(li_2[2:3])
# # print(li_2[1:])
# # print(li_2[:2])
# # print(li_2[3][0:2])
# # #인덱스는 정수형 값 슬라이싱은 리스트형으로 가져온다
# # print(li_2[0])
# # print(li_2[:1])
# # #영상처리할때 슬라이싱쓰는게 좋다

# # li_3 = [1, 2, 3, 4, 5]
# # #출력 결과가 [2, 3]이 되도록 만드세요.
# # print(li_3[1:3])
# # #print(li_3[100]) 에러가난다 범위를 벗어나기 때문에

# # print(len(li_3))
# # li_3[0] = 10
# # print(li_3)

# # li_3.insert(len(li_3),6)
# # print(li_3)

# # li_3.append(7)
# # print(li_3)

# # li_3.extend([8,9])
# # print(li_3)

# # # append(원소) 리스트의 마지막에 원소를 추가
# # li_4 = [1, 2, 3]
# # li_4.append(4)
# # print(li_4)
# # li_4.append("문자")
# # li_4.append([1,2,3])
# # print(li_4)

# insert(인덱스, 원소) 인덱스 위치에 원소 삽입
# li = [1, 2, 3]
# li.insert(1, 10)
# print(li)

# # # remove(값)
# # # 리스트에서 함수에 입력된 값과 같은 값을 찾아 삭제함

# # # li = [1, 2, 3]
# # # li.remove(2) # 만약 리스트에 2가 2개라면 앞에 2만 삭제된다
# # # print(li)
# # # # 리스트에 없는 값을 넣으면 에러난다

# # # pop(인덱스)
# # # 리스트의 인덱스 위치의 요소를 꺼낸다
# # # 인덱스를 함수에 전달하지 않으면 제일 마지막 요소를 꺼낸다 꺼낸 값을 다른 변수에 넣을 수 있다

# # # li = [1, 2, 3, 4]
# # # a =li.pop()
# # # print(a)
# # # li.pop(1)
# # # print(li)

# # #index(값)
# # #리스트에서 값을 찾아 그 값의 인덱스를 돌려준다 -> 함수에서의 return

# # # li = [1, 2, 3]
# # # idx = li.index(2) #index(10)를 하면 에러가 난다 리스트에 값이 없어서
# # # print(idx)

# # # sort()
# # # 리스트의 요소를 정렬한다.

# # li = [5, 3, 1, 4, 2]
# # # li.sort()
# # li.sort(reverse = True)
# # print(li)

# #reverse()
# #리스트의 순서를 뒤집는 함수
# #정렬 아님 그냥 거꾸로 된다

# li = [5, 1, 3, 4, 2]
# li.reverse()
# print(li)

# # count(값)
# # 리스트 안에서 해당 값이 몇 개 있는지 세는 함수

# li = [1, 2, 3, 2]
# cnt =li.count(2) #count(10)하면 에러는 안나고 해당 숫자가 없으니까 0이 나온다
# print(cnt)

# + 연산자
# 리스트를 연결한다
# extend(리스트) 함수와 같다.
# li_1 = [1, 2, 3]
# li_2 = [4, 5, 6]
# # print(li_1 + li_2)
# li_1.extend(li_2)
# print(li_1)

# * 연산자
# 리스트를 반복한다.
# li = [1, 2, 3]
# print(li*3)


#원본을 보호하는게 중요 그래서 사본에한다